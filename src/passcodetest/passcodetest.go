// passcodetest
package main

import (
	"encoding/json"
	"io/ioutil"
	"log"
	"net/http"
	"net/url"
	"strings"
)

type RequestData struct {
	ImgBuf string `json:"img_buf"`
	Type   string `json:"type"`
	Logon  int    `json:"logon"`
	Check  string `json:"check"`
}

func main() {
	reqUrl := "http://check.huochepiao.360.cn/img_vcode"
	proxy := func(r *http.Request) (*url.URL, error) {
		return url.Parse("http://127.0.0.1:8888")
	}
	transport := &http.Transport{Proxy: proxy}
	client := &http.Client{Transport: transport}
	img_buf := ``
	//	data := &RequestData{img_buf, "D", 1, "aee8770939664bea57ea8230d1994c99"}
	data := &RequestData{
		ImgBuf: img_buf,
		Type:   "D",
		Logon:  1,
		Check:  "aee8770939664bea57ea8230d1994c99"}

	log.Println("data:", &data)

	jsonBytes, _ := json.Marshal(data)

	log.Println("json:", string(jsonBytes))

	reader := strings.NewReader(string(jsonBytes))

	req, err := http.NewRequest("POST", reqUrl, reader)

	if err != nil {
		log.Fatalf("NewRequest Err: %s", err)
	}

	req.Header.Add("Accept", "*/*")
	req.Header.Add("Accept-Encoding", "gzip,deflate")
	req.Header.Add("Accept-Language", "zh-CN,zh;q=0.8")
	req.Header.Add("User-Agent", "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36 QIHU 360SE")
	req.Header.Add("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8")
	req.Header.Add("Host", "check.huochepiao.360.cn")

	resp, err := client.Do(req)
	defer resp.Body.Close()

	if err != nil {
		log.Fatalf("NewRequest Err: %s", err)
	}

	var body []byte

	if resp.StatusCode == 200 {
		encoding := resp.Header.Get("Content-Encoding")
		log.Println("Content-Encoding:", encoding)
		switch encoding {
		case "gzip":

		default:
			body, _ = ioutil.ReadAll(resp.Body)
		}
		log.Println("body:", string(body))
	}
}
